name: Build ICS (Shropshire events)

on:
  workflow_dispatch: {}
  schedule:
    - cron: '0 6 * * *'
  push:
    paths:
      - scripts/**
      - data/**
      - requirements.txt
      - .github/workflows/build-ics.yml

permissions:
  contents: write

concurrency:
  group: build-ics
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: Validate YAML (sources & manual)
        run: |
          python - <<'PY'
          import sys, yaml, os
          def check(p):
              if not os.path.exists(p):
                  print(f"[warn] {p} missing (ok)"); return
              try:
                  yaml.safe_load(open(p, encoding="utf-8"))
                  print(f"[ok] {p} parsed")
              except Exception as e:
                  print(f"[error] YAML parse failed in {p}: {e}")
                  sys.exit(3)
          check("data/sources.yaml")
          check("data/manual.yaml")
          PY

      - name: Build ICS
        run: python scripts/build_ics.py

      - name: Count events in ICS
        run: |
          echo "VEVENT count: $(grep -c '^BEGIN:VEVENT' shropshire-events.ics || echo 0)"

      - name: Commit & push (resilient)
        run: |
          set -e
          git config user.name "github-actions"
          git config user.email "actions@users.noreply.github.com"
          git add shropshire-events.ics data/state.json || true
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "auto: refresh ICS"
          # Try a straight push first
          if git push origin HEAD:main; then
            exit 0
          fi
          echo "Push rejected; rebasingâ€¦"
          git pull --rebase origin main || true
          git push origin HEAD:main || git push --force-with-lease origin HEAD:main
